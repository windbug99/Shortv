Replit 배포 시 발생하는 `dial tcp 127.0.0.1:5000: connect: connection refused` 및 `Cannot find module` 오류는 일반적으로 **포트 설정 문제** 또는 **빌드/실행 경로 오류** 때문입니다. 다음 단계로 해결하세요:

---

### 1. **포트 설정 확인 (가장 중요!)**
Replit은 내부적으로 `PORT` 환경 변수를 사용합니다. 애플리케이션 코드에서 **반드시 `process.env.PORT`를 포트로 지정**해야 합니다.

```javascript
// Express 예시 (app.js)
const app = express();
const port = process.env.PORT || 3000; // ✅ Replit은 PORT 환경 변수 사용

app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});
```

- **에러 원인**: `127.0.0.1:5000`에서 실행 중이지만, Replit의 프록시는 `PORT` 변수로 지정된 포트로만 연결을 시도합니다.
- **수정 후**: `.replit` 파일이나 Run 버튼 설정 없이도 자동으로 작동합니다.

---

### 2. **`.replit` 파일 설정 (필요 시)**
프로젝트 루트에 `.replit` 파일이 있다면 다음 내용으로 수정:
```ini
run = "npm start"
[env]
PORT = "3000"  # 앱에서 사용하는 포트 (기본값)
```

---

### 3. **`package.json` 스크립트 확인**
`dist/index.js` 오류는 **빌드가 누락**되었음을 의미합니다:
```json
{
  "scripts": {
    "build": "tsc",  // TypeScript 사용 시 빌드 명령어
    "start": "node dist/index.js"  // 빌드 후 실행
  }
}
```
- **해결책**: `start` 스크립트에 **빌드 단계 추가**:
  ```json
  "start": "npm run build && node dist/index.js"
  ```
  또는 (TypeScript 없는 경우) 직접 실행:
  ```json
  "start": "node src/index.js"  // 실제 진입점 경로로 수정
  ```

---

### 4. **Replit Nix 패키지 설정**
`.replit` 파일에 Node.js 버전 명시:
```ini
[nix]
channel = "stable-24_11"
[packages]
nodejs = "18.x"  # 프로젝트 버전에 맞게 수정
```

---

### 5. **포트 포워딩 비활성화 (Replit 특화)**
Replit은 기본 포트(`3000` 또는 `8080`)를 자동으로 프록시합니다. **5000 포트를 강제로 사용하지 마세요!**  
```javascript
// ❌ 절대 하지 말 것!
app.listen(5000);  // 고정 포트 사용 시 연결 거부 발생
```

---

### 6. **디렉터리 구조 확인**
`Cannot find module` 오류는 **파일 경로 문제**를 의미합니다:
- `dist/index.js`가 실제로 존재하는지 확인.
- TypeScript 프로젝트라면 `tsconfig.json`의 `outDir`이 `dist`로 설정되었는지 확인.

---

### 요약 체크리스트
| 단계 | 확인 사항 |
|------|-----------|
| 1 | 앱에서 `process.env.PORT` 사용 중인가? |
| 2 | `package.json`의 `start` 스크립트에 빌드 명령어 포함되었는가? |
| 3 | `.replit` 파일에 포트/실행 명령어가 설정되었는가? |
| 4 | `dist/` 또는 `build/` 디렉터리가 생성되는가? |

> ✅ 수정 후 **Replit에서 Stop → Run**을 클릭하여 재배포합니다. 포트 설정이 정확하다면 `1104` 포트 오류는 사라집니다.